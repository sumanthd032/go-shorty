// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: links.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createLink = `-- name: CreateLink :one
INSERT INTO links (
    alias,
    original_url,
    user_id 
) VALUES (
    $1, $2, $3 
)
RETURNING id, alias, original_url, password_hash, expires_at, created_at, updated_at, user_id
`

type CreateLinkParams struct {
	Alias       string
	OriginalUrl string
	UserID      pgtype.Int8
}

func (q *Queries) CreateLink(ctx context.Context, arg CreateLinkParams) (Link, error) {
	row := q.db.QueryRow(ctx, createLink, arg.Alias, arg.OriginalUrl, arg.UserID)
	var i Link
	err := row.Scan(
		&i.ID,
		&i.Alias,
		&i.OriginalUrl,
		&i.PasswordHash,
		&i.ExpiresAt,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.UserID,
	)
	return i, err
}

const getLinkByAlias = `-- name: GetLinkByAlias :one
SELECT id, alias, original_url, password_hash, expires_at, created_at, updated_at, user_id FROM links
WHERE alias = $1 LIMIT 1
`

func (q *Queries) GetLinkByAlias(ctx context.Context, alias string) (Link, error) {
	row := q.db.QueryRow(ctx, getLinkByAlias, alias)
	var i Link
	err := row.Scan(
		&i.ID,
		&i.Alias,
		&i.OriginalUrl,
		&i.PasswordHash,
		&i.ExpiresAt,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.UserID,
	)
	return i, err
}
